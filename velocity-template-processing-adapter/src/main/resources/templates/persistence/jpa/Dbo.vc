package ${PackageName};

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
#if (${Class.hasAnEnumTypeAttribute()})
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
#end
#if (${Class.hasAReferenceAttribute()})
import jakarta.persistence.FetchType;
#end
#if (${Class.isPropertyWithNameInAttributesPresent("id")})
import jakarta.persistence.Id;
#end
#if (${Class.hasAReferenceAttribute()})
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
#end
import jakarta.persistence.Table;
import lombok.Data;
import lombok.Generated;
import lombok.experimental.Accessors;

#foreach($Import in $Imports)
import ${Import};
#end

/**
 * ${GeneratedCodeMarker}
 *
 * Remove this comment to suspend class from generation process.
 */
@Accessors(chain = true)
@Data
@Generated
@Entity(name = "${ClassName}Dbo")
@Table(name = "${Class.getNameSeparated("_").toUpperCase()}")
public class ${ClassName}Dbo {

#foreach($Attribute in $Attributes)
	#if (${Attribute.hasPropertyWithValue("id", "true")})
	@Id
	#end
	#if (${Attribute.isReference()})
	@JoinColumn(name = "${Attribute.getNameSeparated("_").toUpperCase()}", referencedColumnName = "${Attribute.getTypeClassType().getAttributeNameByTypePropertyName("id").toUpperCase()}", nullable =#if (${Attribute.hasPropertyWithValue("nullable", "false")}) false#else true#end)
	@ManyToOne(fetch = FetchType.EAGER)
	private ${Attribute.getTypeName()}Dbo ${Attribute.getName()};
	#else
	#if (${Attribute.isTypeEnum()})
	@Enumerated(EnumType.STRING)
	#end
	@Column(name = "${Attribute.getNameSeparated("_").toUpperCase()}", nullable =#if (${Attribute.hasPropertyWithValue("nullable", "false")}) false#else true#end)
	private ${Attribute.getTypeName()}#if (${Attribute.hasTypePropertyWithValue("project-type", "true")})Dbo#end ${Attribute.getName()};
	#end
#end

}
